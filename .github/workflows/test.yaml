# Copyright 2024 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Test
on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      coverage:
        required: false
        type: boolean
        default: false
      os:
        required: false
        type: string
        default: "ubuntu-latest"
      timeout:
        required: false
        type: number
        default: 60
env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
jobs:
  test:
    name: Unit and Integration Tests
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - uses: actions/checkout@v5

      - if: ${{ inputs.os == 'ubuntu-latest' }}
        name:  Install Microsoft ODBC Drivers & Free additional space
        run: |
          sudo ACCEPT_EULA=Y apt-get install msodbcsql18 -y || true
          sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
          sudo rm -rf \
          /usr/share/dotnet /usr/local/lib/android /opt/ghc \
          /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
          /usr/lib/jvm || true
          sudo apt-get autoremove -y \
          && sudo apt-get clean -y \
          && sudo rm -rf /root/.cache \
          && sudo rm -rf /var/apt/lists/* \
          && sudo rm -rf /var/cache/apt/* \
          && sudo apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python ${{ inputs.python-version }}
        run: uv python install ${{ inputs.python-version }}

      - name: Install dependencies
        run: uv sync --all-extras --dev --locked

      - if: ${{ inputs.coverage }}
        name: Lint
        run: uv run pre-commit run --all-files

      - if: ${{ inputs.coverage }}
        name: Run tests with coverage tracking
        run: uv run pytest --cov --cov-report=xml

      - if: ${{ !inputs.coverage }}
        name: Run tests without tracking coverage
        run: uv run pytest

      - if: ${{ inputs.coverage }}
        uses: actions/upload-artifact@v5
        with:
            name: coverage-xml
            path: coverage.xml
